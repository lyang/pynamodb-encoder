[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.coverage.html]
directory = "tests/reports/coverage"

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
branch = true
data_file = "tests/reports/coverage/data"

[tool.coverage.xml]
output = "tests/reports/coverage/cobertura.xml"

[tool.isort]
profile = "black"
src_paths = ["pynamodb_encoder"]

[tool.poetry]
name = "pynamodb-encoder"
description = "Helper classes that encode/decode pynamodb models to/from JSON serializable dict"
authors = ["Lin Yang <github@linyang.me>"]
keywords = ["dynamodb", "pynamodb", "json", "encode", "decode"]
homepage = "https://github.com/lyang/pynamodb-encoder"
repository = "https://github.com/lyang/pynamodb-encoder"
license = "MIT"
include = ["LICENSE"]
readme = "README.md"
version = "0.1.2"

[tool.poetry.dependencies]
python = "^3.7"
pynamodb = "^5.1.0"

[tool.poetry.dev-dependencies]
black = "^23.1"
coverage = {extras = ["toml"], version = "^7.2"}
flake8 = "^5.0.4"
isort = "^5.11.5"
pyright = "^1.1.300"
pytest = "^7.2"
pytest-cov = "^4.0.0"
typed-ast = {version = "^1.5.4", python = "< 3.8"}
pre-commit = "^2.21.0"

[tool.pytest.ini_options]
addopts = [
  "--cov-report=html",
  "--cov-report=term",
  "--cov-report=xml",
  "--cov=pynamodb_encoder",
  "--junitxml=tests/reports/junit.xml",
]
